[config]
default_to_workspace = false

[tasks.set-env-docker.env]
DATABASE_HOST = "postgres"
DATABASE_PORT = "${DATABASE_PORT_INNER}"
DATABASE_URL = "postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}?user=${DATABASE_USERNAME}&password=${DATABASE_PASSWORD}"

[tasks.set-env-local.env]
DATABASE_HOST = "localhost"
DATABASE_PORT = "${DATABASE_PORT_OUTER}"
DATABASE_URL = "postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}?user=${DATABASE_USERNAME}&password=${DATABASE_PASSWORD}"

[tasks.before-build]
script = ["cargo make compose-up-db", "sleep 1"]
env_files = [".env"]

[tasks.compose-build-app]
extend = "set-env-local"
command = "docker"
args = [
    "compose",
    "build",
    "app",
    "--build-arg",
    "BUILDKIT_INLINE_CACHE=1",
    "${@}",
]

[tasks.run]
extend = "set-env-local"
dependencies = ["before-build"]
command = "cargo"
args = ["run", "${@}"]

[tasks.run-in-docker]
extend = "set-env-local"
dependencies = ["before-build", "compose-build-app"]
command = "docker"
args = ["compose", "up", "-d", "app"]

[tasks.logs]
extend = "set-env-local"
dependencies = ["before-build"]
command = "docker"
args = ["compose", "logs", "${@}"]

[tasks.build]
extend = "set-env-local"
dependencies = ["before-build"]
command = "docker"
args = ["build", "${@}"]

[tasks.check]
extend = "set-env-local"
dependencies = ["before-build"]
command = "docker"
args = ["check"]

[tasks.watch]
extend = "set-env-local"
dependencies = ["before-build"]
run_task = [{ name = ["fmt", "clippy", "test"] }]
watch = true

[tasks.fmt]
extend = "set-env-local"
command = "cargo"
args = ["fmt", "--all", "${@}"]

[tasks.clippy]
extend = "set-env-local"
command = "cargo"
args = ["clippy", "--all", "--all-targets", "${@]"]

[tasks.test]
extend = "set-env-local"
dependencies = ["before-build"]
install_crate = { crate_name = "cargo-nextest", binary = "cargo", test_arg = [
    "nextest",
    "--help",
] }
command = "cargo"
args = [
    "nextest",
    "run",
    "--workspace",
    "--status-level",
    "all",
    "--test-threads=1",
]

[tasks.compose]
extend = "set-env-docker"
command = "docker"
args = ["compose", "${@}"]

[tasks.compose-up-db]
extend = "set-env-docker"
command = "docker"
args = ["compose", "up", "-d", "postgres"]

[tasks.compose-down]
extend = "set-env-docker"
command = "docker"
args = ["compose", "down"]

[tasks.compose-remove]
extend = "set-env-docker"
command = "docker"
args = ["compose", "down", "-v"]
